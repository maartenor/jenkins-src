apiVersion: apps/v1
kind: Deployment
metadata:
  name: httpserver
  namespace: develop
  labels:
    app: busybox-httpserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: busybox-httpserver
  template:
    metadata:
      labels:
        app: busybox-httpserver
    spec:
      containers:
      - name: httpserver
        image: python:3.9-slim
        command:
          - "python"
          - "-c"
          - |
            import time
            from http.server import BaseHTTPRequestHandler, HTTPServer

            class RequestHandler(BaseHTTPRequestHandler):
                def do_GET(self):
                    # Calculate elapsed time in seconds
                    elapsed_time = int(time.time()) // 5 * 5
                    message = f'Hello World - {elapsed_time} seconds'
                    
                    # Send HTTP response
                    self.send_response(200)
                    self.send_header('Content-type', 'text/html')
                    self.end_headers()
                    self.wfile.write(bytes(f'<html><body><h1>{message}</h1></body></html>', 'utf-8'))

            if __name__ == '__main__':
                # Create HTTP server with custom handler
                server = HTTPServer(('0.0.0.0', 8088), RequestHandler)
                print('Starting server on port 8088...')
                server.serve_forever()
        ports:
        - containerPort: 8088
        env:
        - name: HOSTNAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        resources:
          limits:
            cpu: "0.02"
            memory: "50Mi"
          requests:
            cpu: "0.01"
            memory: "20Mi"


